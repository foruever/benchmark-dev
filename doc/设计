### 1 数据装载速度(MB/秒, metrics/秒)
1.1 程序调用命令  记录开始时间/结束时间 算出来导入结果
	graphite 可以直接先将文件载入内存，然后进行导入，在导入后，调用socket接口时记录开始时间戳timestampStart，导入成功后记录结束时间戳timestampEnd，  
	最后 数据装载速度(MB/s)=(文件大小)/(timestampEnd-timestampStart)*1000
	         数据装载速度(metrics/s)=(metrics)/(timestampEnd-timestampStart)*1000
 
### 2 写操作的吞吐量 Write throughput (metrics/秒)
2.1 分别写1W,10W,20W,50W,100W,200W,500W条进行计算(每次执行完都清空)
 	吞吐量=(条数)/相应时间
 	
### 3 写操作的响应时间 write response time (min (ms)/mean (ms)/95%/99%/max (ms))    (平均插入每条)
3.1 分别写1,100,1W,10W,50W,100W条进行计算(每次执行完都清空,每一类进行100次计算)
	以10W为例
	每写入一次，得到相应时间 timeout(ms) 将其放进内存(memory保存)，最后内存中保存100条，然后求出min,mean,95%,99%,max
	同时也可以求出来吞吐量(根据mean计算)
	
### 4 读操作的吞吐量 Query throughput (metrics/秒)
4.1 分别读1W,10W,20W,50W,100W,200W,500W数据，放入内存中进行计算
	计算方式与2.1类似
	
### 5 读操作的响应时间 read response time(min (ms)/mean (ms)/95%/99%/max (ms)) (平均插入每条) ###?读的响应时间 怎么算的，要跟查询的数据量挂钩吗?
5.1 首先插入100,000,000,分别读1K,1W,10W,30W,100W,300W数据 每个进行记录时间结果放入内存中，最后全部计算完后，进行统计计算(每一类进行100次计算，最后统计时排除失败的)
	计算出
	计算方式与3.1类似
	
### 6 压缩比compression ratio   直接计算压缩有文件和压缩前文件大小比较  比如导入前是100M，导入后是30M  直接计算比例 x:1
 graphite 压缩后的就是  *.wsp 的大小
 
###设计程序为，每一次可以计算某一项，也可以选择计算全部
### ps：2，3可以合并计算  ;4,5可以合并计算



### 实时导入功能测试增加压力  ，然后在压力下进行测试

